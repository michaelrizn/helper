// network.js

window.Network = {
  "Network - TCP vs UDP": {
    "TCP (Transmission Control Protocol)":
      "Надёжный, ориентированный на соединение протокол с подтверждением доставки данных.",
    "UDP (User Datagram Protocol)":
      "Быстрый, ненадёжный, без установки соединения протокол для передачи данных.",
    "Основные различия":
      "TCP гарантирует доставку данных и их порядок, UDP не гарантирует ни доставку, ни порядок. TCP использует подтверждения и управление потоком, UDP — нет. TCP работает медленнее из-за дополнительных проверок, UDP быстрее за счёт минимальных накладных расходов. TCP подходит для приложений, требующих надёжности (например, HTTP, FTP), UDP — для приложений, где важна скорость (например, стриминг, игры).",
  },
  "Network - LAN": {
    Определение:
      "Локальная сеть (LAN) соединяет устройства в ограниченной области, например, в доме или офисе.",
    "Звезда топология":
      "Устройства подключены к центральному коммутатору. Выход из строя одного кабеля не влияет на остальные.",
    "Шина топология":
      "Все устройства подключены к общему кабелю. Отказ кабеля выводит сеть из строя.",
    "Кольцо топология":
      "Устройства соединены в кольцо. Разрыв кольца приводит к остановке работы сети.",
    "Коммутаторы (Switches)":
      "Обеспечивают связь между устройствами внутри одной сети.",
    "Маршрутизаторы (Routers)":
      "Соединяют разные сети и управляют потоком данных между ними.",
    "Протоколы передачи данных":
      "Ethernet — основная технология для локальных сетей, обеспечивающая высокую скорость передачи данных.",
  },
  "Network - TCP/IP Model": {
    "Описание модели":
      "Модель TCP/IP используется для передачи данных между устройствами в сети.",
    "Сетевой интерфейс (Network Interface)":
      "Обеспечивает физическую передачу данных (Ethernet, Wi-Fi).",
    "Интернет (Internet)":
      "Определяет маршрутизацию данных через сеть (IP-протокол).",
    "Транспорт (Transport)":
      "Обеспечивает надёжную (TCP) или быструю (UDP) передачу данных.",
    "Прикладной (Application)":
      "Поддерживает приложения и их функции (HTTP, FTP, SMTP).",
    "IP (Internet Protocol)":
      "Определяет адресацию и маршрутизацию пакетов данных.",
    "TCP (Transmission Control Protocol)":
      "Надёжная передача данных с контролем потока и проверкой ошибок.",
    "UDP (User Datagram Protocol)":
      "Быстрая передача данных без гарантии доставки.",
  },
  "Network - DNS": {
    Определение:
      "DNS (Domain Name System) переводит доменные имена в IP-адреса, используемые сетевыми устройствами.",
    "Как работает":
      "Клиент отправляет запрос на DNS-сервер для получения IP-адреса. DNS-сервер ищет адрес в своей базе данных или перенаправляет запрос к другим серверам. Когда IP-адрес найден, он возвращается клиенту, и соединение устанавливается.",
    "Типы DNS-записей":
      "A-запись: Соответствует доменное имя с IPv4-адресом. AAAA-запись: Соответствует доменное имя с IPv6-адресом. CNAME-запись: Указывает на другое доменное имя (алиас).",
  },
  "Network - DHCP": {
    Определение:
      "DHCP (Dynamic Host Configuration Protocol) автоматически назначает IP-адреса устройствам в сети.",
    "Как работает":
      "Клиент отправляет запрос для получения IP-адреса. DHCP-сервер предлагает IP-адрес. Клиент подтверждает запрос, а сервер закрепляет IP-адрес за клиентом.",
    Преимущества:
      "Автоматизация управления IP-адресами. Гибкость подключения устройств к сети.",
  },
  "Network - HTTPS": {
    Определение:
      "HTTPS (HyperText Transfer Protocol Secure) — расширение HTTP с использованием SSL/TLS для шифрования данных.",
    "Как работает":
      "Браузер запрашивает сертификат у сервера. Сертификат проверяется на подлинность. Устанавливается зашифрованное соединение, и данные передаются в защищённой форме.",
    "Ключевые особенности":
      "Шифрование: Защищает данные от перехвата. Аутентификация: Проверяет подлинность сервера. Целостность данных: Гарантирует неизменность данных при передаче.",
  },
  "Network - SSL vs TLS": {
    "SSL (Secure Sockets Layer)":
      "Ранний стандарт для защищённой передачи данных, заменённый из-за уязвимостей.",
    "TLS (Transport Layer Security)":
      "Современная версия с улучшенными алгоритмами шифрования.",
    "Основные различия":
      "TLS обеспечивает лучшую безопасность и поддержку современных алгоритмов. SSL устарел и имеет известные уязвимости.",
  },
  "Network - Примеры": {
    "Настройка HTTPS для веб-сервера":
      "Установка SSL-сертификата и настройка веб-сервера для использования HTTPS, например, через Nginx: `server { listen 443 ssl; ssl_certificate /path/to/cert.pem; ssl_certificate_key /path/to/key.pem; }`",
    "Конфигурация DHCP-сервера":
      "Настройка DHCP-сервера для автоматического назначения IP-адресов, например, в ISC DHCP: `subnet 192.168.1.0 netmask 255.255.255.0 { range 192.168.1.100 192.168.1.200; option routers 192.168.1.1; option domain-name-servers 8.8.8.8; }`",
    "Создание DNS-записи CNAME":
      "Добавление CNAME-записи для домена, например, `www.example.com CNAME example.com`",
    "Использование TCP для передачи файлов":
      "Протокол FTP использует TCP для надёжной передачи файлов между клиентом и сервером.",
    "Использование UDP для онлайн-игр":
      "Онлайн-игры используют UDP для быстрой передачи данных, таких как позиции игроков, без подтверждений доставки.",
    "Настройка VLAN в LAN":
      "Создание виртуальных локальных сетей (VLAN) для сегментации трафика, например, на коммутаторе: `switchport mode access` и `switchport access vlan 10`",
    "Проверка доступности сервера с помощью ping":
      "Команда: `ping example.com` для проверки доступности и времени отклика сервера",
    "Использование traceroute для диагностики сети":
      "Команда: `traceroute example.com` для определения пути пакетов до сервера",
    "Настройка NAT на маршрутизаторе":
      "Конфигурация NAT для преобразования внутренних IP-адресов в внешний адрес маршрутизатора, например, `iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE`",
  },
  "Network - Вопросы и Ответы для Собеседований": {
    "Что такое разница между TCP и UDP?":
      "TCP — надёжный, ориентированный на соединение протокол с подтверждением доставки данных, подходящий для приложений, требующих точности. UDP — быстрый, ненадёжный протокол без подтверждений, подходящий для приложений, где важна скорость.",
    "Объясните модель OSI и сравните её с моделью TCP/IP.":
      "Модель OSI состоит из 7 уровней, а модель TCP/IP — из 4. Модель TCP/IP более практична и используется в реальных сетях. Каждый уровень TCP/IP соответствует одному или нескольким уровням OSI.",
    "Как работает DNS и зачем он нужен?":
      "DNS переводит доменные имена в IP-адреса, позволяя пользователям обращаться к серверам по понятным именам вместо числовых адресов. Клиент запрашивает DNS-сервер для получения IP-адреса, и затем устанавливается соединение.",
    "Что такое DHCP и как он работает?":
      "DHCP автоматически назначает IP-адреса устройствам в сети. Клиент отправляет запрос, сервер предлагает IP-адрес, клиент подтверждает, и сервер закрепляет адрес за клиентом на определённое время.",
    "Объясните, как работает HTTPS и зачем оно нужно.":
      "HTTPS использует SSL/TLS для шифрования данных между клиентом и сервером, обеспечивая конфиденциальность и целостность передаваемой информации, а также аутентификацию сервера.",
    "Что такое VLAN и как она используется в LAN?":
      "VLAN (Virtual LAN) позволяет сегментировать физическую сеть на несколько логических сетей, улучшая безопасность и управляемость, например, разделяя трафик сотрудников и гостей.",
    "Каковы преимущества использования TCP/IP модели?":
      "TCP/IP модель простая, гибкая и соответствует реальным сетевым протоколам. Она обеспечивает эффективную маршрутизацию, надёжность передачи данных и поддержку различных типов устройств и сетей.",
    "Как настроить NAT на маршрутизаторе?":
      "Используя команды iptables, например, `iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE` для преобразования внутренних IP-адресов в внешний адрес маршрутизатора.",
    "Что такое ping и как он используется?":
      "Ping — это утилита для проверки доступности узла в сети и измерения времени задержки. Команда `ping example.com` отправляет ICMP-запросы и показывает, сколько времени требуется для ответа.",
    "Как диагностировать сетевую проблему с помощью traceroute?":
      "Traceroute показывает путь, по которому проходят пакеты до целевого узла, отображая промежуточные маршрутизаторы. Это помогает определить, на каком этапе происходит сбой.",
    "Что такое SSL/TLS и чем они отличаются?":
      "SSL — старый протокол для шифрования данных, заменённый более безопасным TLS. TLS обеспечивает улучшенную безопасность и поддержку современных алгоритмов шифрования.",
    "Объясните, что такое NAT и как он работает.":
      "NAT (Network Address Translation) позволяет преобразовывать внутренние IP-адреса в внешний адрес маршрутизатора, обеспечивая доступ в интернет для нескольких устройств и скрывая внутреннюю сеть от внешнего мира.",
    "Что такое CIDR и как оно используется в сетях?":
      "CIDR (Classless Inter-Domain Routing) позволяет более гибко распределять IP-адреса и использовать маски подсетей произвольной длины, улучшая эффективность использования адресного пространства.",
    "Как обеспечить безопасность сети на уровне TCP/IP?":
      "Используйте брандмауэры, шифрование данных (SSL/TLS), аутентификацию пользователей, контроль доступа, сегментацию сети и регулярное обновление программного обеспечения для защиты от угроз.",
    "Что такое порт и зачем он нужен в сетях?":
      "Порт — это числовой идентификатор, используемый для направления сетевого трафика к конкретным приложениям или сервисам на устройстве. Например, HTTP использует порт 80, HTTPS — порт 443.",
    "Как настроить статический IP-адрес на устройстве в LAN?":
      "Отредактируйте сетевые настройки устройства, укажите статический IP-адрес, маску подсети, шлюз и DNS-серверы. Например, в Linux редактируйте файл /etc/network/interfaces или используйте NetworkManager.",
    "Что такое MTU и как оно влияет на сетевую производительность?":
      "MTU (Maximum Transmission Unit) определяет максимальный размер пакета данных, который может быть передан по сети. Правильная настройка MTU может улучшить производительность и снизить количество фрагментаций.",
    "Объясните концепцию маршрутизации и как она реализуется.":
      "Маршрутизация — процесс определения пути для передачи данных от источника к получателю через сеть. Это реализуется с помощью маршрутизаторов, таблиц маршрутизации и протоколов маршрутизации, таких как OSPF, BGP.",
    "Что такое VPN и какие виды VPN вы знаете?":
      "VPN (Virtual Private Network) создаёт защищённое соединение поверх публичной сети. Виды VPN включают удалённый доступ (Remote Access VPN), site-to-site VPN и MPLS VPN.",
  },
  "OSI TCP/IP - OSI Model vs TCP/IP Model": {
    "Тема: Модель OSI и TCP/IP": "",
    "Layer 7 - Application (Приложение)":
      "Этот слой отвечает за взаимодействие приложений с пользователем. Примеры: HTTP, FTP, DNS, SMTP.",
    "Layer 6 - Presentation (Представление)":
      "Форматирует данные для их правильной интерпретации приложениями. Примеры: SSL/TLS, кодеки.",
    "Layer 5 - Session (Сеанс)":
      "Управляет сессиями между хостами, включая их установку и завершение. Пример: NetBIOS.",
    "Layer 4 - Transport (Транспорт)":
      "Обеспечивает надёжную передачу данных. Примеры: TCP, UDP.",
    "Layer 3 - Network (Сетевой)":
      "Управляет маршрутизацией и адресацией данных. Примеры: IP, ICMP.",
    "Layer 2 - Data Link (Канальный)":
      "Организует передачу данных между узлами в одной сети. Примеры: Ethernet, MAC-адреса.",
    "Layer 1 - Physical (Физический)":
      "Определяет физические характеристики соединения. Примеры: кабели, Wi-Fi, оптоволокно.",
  },
  "OSI TCP/IP - TCP/IP Model Overview": {
    "Application Layer":
      "Объединяет уровни приложения, представления и сеанса из модели OSI. Примеры: HTTP, FTP, DNS.",
    "Transport Layer": "Аналог транспортного уровня OSI. Примеры: TCP, UDP.",
    "Internet Layer": "Аналог сетевого уровня OSI. Примеры: IP, ICMP.",
    "Network Access/Link Layer":
      "Аналог физических и канального уровня OSI. Примеры: Ethernet, Wi-Fi.",
  },
  "OSI TCP/IP - Key Protocols and Hardware by Layer": {
    "Application Layer":
      "Протоколы: HTTP, FTP, SMTP, DNS. Оборудование: шлюзы, прокси-серверы.",
    "Transport Layer": "Протоколы: TCP, UDP. Оборудование: маршрутизаторы.",
    "Internet Layer":
      "Протоколы: IP, ICMP, NAT. Оборудование: Layer 3 коммутаторы, роутеры.",
    "Network Access Layer":
      "Протоколы: Ethernet, ARP. Оборудование: коммутаторы, точки доступа.",
    "Physical Layer":
      "Интерфейсы: кабели, Wi-Fi, модемы. Оборудование: сетевые адаптеры, концентраторы.",
  },
  "OSI TCP/IP - Differences Between OSI and TCP/IP Models": {
    "Сложность и детализация":
      "Модель OSI более подробная и включает 7 уровней. TCP/IP упрощена и имеет 4 уровня.",
    Реализация:
      "TCP/IP изначально был разработан для работы в интернете. OSI — скорее концептуальная модель.",
    Совместимость:
      "TCP/IP широко используется в реальных сетях, в то время как OSI чаще применяется для обучения и теоретических основ.",
  },
  "OSI TCP/IP - Questions and Concepts for Interviews": {
    "Тема: Модель OSI и TCP/IP": "",
    "Какова цель модели OSI?":
      "Обеспечить стандартизацию сетевых протоколов и взаимодействия между разными системами.",
    "Какова роль транспортного уровня?":
      "Обеспечивает надёжную или ненадёжную доставку данных (TCP, UDP).",
    "Как данные проходят через уровни модели OSI?":
      "Каждый уровень добавляет свои заголовки (или удаляет их), обрабатывая данные перед передачей.",
    "Каково основное отличие между TCP и UDP?":
      "TCP обеспечивает надёжную доставку, UDP — быструю, но ненадёжную передачу.",
    "Как NAT работает на сетевом уровне?":
      "Переводит частные IP-адреса в публичные для доступа в интернет.",
  },
};
