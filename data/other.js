window.Other = {
  "Agile методологии - Scrum и Kanban": [
    "Scrum: Спринты длиной 2-4 недели.",
    "Scrum: Ежедневные стендапы для синхронизации команды.",
    "Scrum: Планирование и обзор спринта — постановка целей и демонстрация результатов.",
    "Scrum: Ретроспектива — анализ и улучшение процессов.",
    "Scrum: Роли — Scrum-мастер, Product Owner, команда разработки.",
    "Scrum: Артефакты — бэклоги продукта и спринта, инкремент.",
    "Kanban: Визуализация потока задач на доске.",
    "Kanban: Ограничение количества задач в работе (WIP).",
    "Kanban: Непрерывные улучшения процессов.",
    "Kanban: Метрики — время выполнения, пропускная способность.",
    "Различия: Scrum использует спринты, Kanban — непрерывный поток.",
    "Различия: Scrum более структурирован, Kanban гибче.",
    "Преимущества Scrum: Четкость процессов, регулярная обратная связь.",
    "Преимущества Kanban: Гибкость, оптимизация потока работ.",
  ],
  "Реляционные и нереляционные базы данных": [
    "Реляционные: Строгая табличная структура, SQL запросы.",
    "Реляционные: ACID транзакции, целостность данных.",
    "Реляционные: MySQL, PostgreSQL, Oracle.",
    "Нереляционные: Гибкая схема (документы, графы, ключ-значение).",
    "Нереляционные: Масштабируемость, большие данные.",
    "Нереляционные: MongoDB, Cassandra, Redis.",
    "Различия: Структура данных и способы масштабирования.",
    "Различия: Согласованность против доступности.",
    "Преимущества реляционных: Надежность, сложные запросы.",
    "Преимущества нереляционных: Гибкость, производительность.",
  ],
  "Асинхронное шифрование": [
    "Принцип: Пара ключей - открытый для шифрования, закрытый для расшифровки.",
    "Алгоритмы: RSA, ECC.",
    "Преимущества: Безопасность, поддержка цифровых подписей.",
    "Недостатки: Медленнее симметричного шифрования.",
    "Применение: Email (PGP), HTTPS, цифровые подписи.",
  ],
  "Синхронные и асинхронные вызовы методов": [
    "Синхронные: Блокируют выполнение до получения ответа.",
    "Синхронные: Просты в реализации.",
    "Асинхронные: Продолжают работу без ожидания ответа.",
    "Асинхронные: Эффективное использование ресурсов.",
    "Различия: Поток выполнения и масштабируемость.",
    "Различия: Сложность реализации и отладки.",
  ],
  "HTTP методы - GET vs POST": [
    "GET: Получение данных через URL.",
    "GET: Кэширование, закладки.",
    "GET: Ограничения по размеру.",
    "POST: Отправка данных в теле запроса.",
    "POST: Без кэширования, больше данных.",
    "POST: Безопаснее для конфиденциальных данных.",
  ],
  WebSockets: [
    "Суть: Постоянное соединение клиент-сервер.",
    "Особенности: Двусторонняя связь в реальном времени.",
    "Применение: Чаты, игры, биржевые данные.",
    "Плюсы: Низкие задержки, меньше нагрузка.",
    "Минусы: Сложнее в реализации.",
  ],
  "Теорема CAP": [
    "Суть: Нельзя одновременно обеспечить согласованность, доступность и устойчивость.",
    "Компоненты: Consistency, Availability, Partition tolerance.",
    "Выбор: CP (банки), AP (соцсети), CA (локальные БД).",
    "Применение: Проектирование распределенных систем.",
  ],
  "Балансировка нагрузки": [
    "Суть: Распределение запросов между серверами.",
    "Методы: Round Robin, Least Connections, IP Hash.",
    "Мониторинг: Проверки состояния, автомасштабирование.",
    "Инструменты: NGINX, HAProxy, облачные решения.",
  ],
  "Масштабирование - вертикальное vs горизонтальное": [
    "Вертикальное: Увеличение мощности сервера.",
    "Горизонтальное: Добавление новых серверов.",
    "Выбор: Зависит от размера системы и требований.",
    "Плюсы/минусы: Простота против гибкости.",
  ],
  "Управление сессиями в веб-приложениях": [
    "Принципы: Уникальные ID, ограниченное время жизни.",
    "Хранение: На сервере или у клиента.",
    "Безопасность: HTTPS, защита от XSS и CSRF.",
    "Технологии: Express-session, JWT токены.",
  ],
  "Принципы интеграции систем": [
    "Основы: Стандарты данных, протоколы, API.",
    "Методы: Point-to-Point, Middleware, ESB.",
    "Проблемы: Совместимость, безопасность, масштабирование.",
    "Практики: Документация, тестирование, мониторинг.",
  ],
  "Enterprise Service Bus (ESB)": [
    "Функции: Маршрутизация, преобразование данных.",
    "Преимущества: Гибкость, централизация управления.",
    "Недостатки: Сложность, затраты.",
    "Решения: MuleSoft, IBM, Apache Camel.",
  ],
  "Аутентификация vs Авторизация": [
    "Аутентификация: Проверка личности.",
    "Авторизация: Проверка прав доступа.",
    "Методы: Пароли, MFA, биометрия, OAuth.",
    "Практики: Сильные пароли, минимум привилегий.",
  ],
};
